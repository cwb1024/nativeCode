			IO
	一、		
	//数据从硬盘读到内存，是输入     输入流将数据从硬盘中拿到内存
	//数据从内存读出到硬盘，是输出          读入内存，写到外存
	//设备上的数据全都是       以字节为单位的二进制
	//字节流是否能处理所有数据？  是的可以处理所有数据，那么为什么要有字符流（以前没有，现在有了）
	// 字节流 + 编码表 封装成了字符流
	
	二、
	字节流的两个顶层父类：
	1、InputStream   2、OutputStream
	
	字符流的两个顶层父类：
	1、Reader		 2、Writer
	
	有文字，优先考虑字符流，
	
	硬盘是操作文件的，往硬盘上存储数据，要找到一个操作文件的输出流Writer
	FileWriter
	这些体系的子类都以父类名作为后缀
	而且子类名的前缀就是该对象的功能
	
	流对象使用步骤：
	1、创建一个流对象，绑定数据目的
	2、调用该流对象的方法，write
	3、关闭流对象,close
	
	IO流的读写规律总结
	【1】确定源头及目的地
	源	--inputStream		--reader
	目	--outputStream		--writer
	什么是数据源，数据已经有了，我想把数据拿过来用
	什么是数据目的，数据是没有的，我想从其他地方存过来，写过来
	【2】确定操作的数据是字节，还是文本文件
	==读
	对于文本文件，用reader类的子类去读      inputStreamReader   fileReader
	对于不是文本文件 ，用inputStream来读	
	==写
	文本文件	reader
	不是文本文件	outputStream
	
	【3】确定数据所在的设备
	=========通过要读写的设备，确定使用什么流
	源设备：
	硬盘：file开头
	内存：数组，字符串
	键盘：system.in
	网络:socket
	
	目的设备：
	硬盘：file开头
	内存：数组，字符串
	屏幕：system.out
	网络：socket
	
	【4】确定是否需要额外的功能
	1、转换吗？转换流        inputStreamreader		outputStreamWriter     //指定编码表
	2、高效吗？      ①、数组自己定义的形式 		②、bufferedXXX  +数组 
	
	打印流直接将文本打印到文本文件中，有自动刷新流对象的功能。
	
	